{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PatchCable=_ref=>{let{i,id,outId,startPt,handleRemovePatchCable,updateConnections}=_ref;// const [hover, setHover] = useState(false);\nconst svgRef=useRef(null);// const [el, setEl] = useState(null);\nconst[inId,setInId]=useState(null);const[points,setPoints]=useState([{x:startPt.x,y:startPt.y},{x:startPt.x,y:startPt.y}]);const mousemove=event=>{event.preventDefault();let cursorPoint=svgRef.current.createSVGPoint();cursorPoint.x=event.clientX;cursorPoint.y=event.clientY;cursorPoint=cursorPoint.matrixTransform(svgRef.current.getScreenCTM().inverse());setPoints(points.map((p,i)=>i===1?{x:Math.max(Math.min(cursorPoint.x,1000),0),y:Math.max(Math.min(cursorPoint.y,1000),0)}:p));};const mouseup=event=>{if(event.target.id.includes(\"inNode\")){setInId(event.target.id.slice(7));// console.log(\"created patch cable with id: \" + id);\n// console.log(outId + \" -> \" + event.target.id.slice(7));\nupdateConnections(outId,event.target.id.slice(7),1);setPoints(points.map((p,i)=>i===1?{x:event.target.attributes.cx.value,y:event.target.attributes.cy.value}:p));}else{// not connected to an input node, remove cable\nhandleRemovePatchCable(id);}// el.classList.remove(\"pointer-events-none\");\ndocument.removeEventListener(\"mousemove\",mousemove);document.removeEventListener(\"mouseup\",mouseup);};const startDrag=(event,index)=>{event.preventDefault();// setEl(event.target);\nconsole.log(event.target);// el.classList.add(\"pointer-events-none\");\ndocument.addEventListener(\"mousemove\",mousemove);document.addEventListener(\"mouseup\",mouseup);};useEffect(()=>{document.addEventListener(\"mousemove\",mousemove);document.addEventListener(\"mouseup\",mouseup);},[]);return/*#__PURE__*/_jsxs(\"svg\",{ref:svgRef,children:[/*#__PURE__*/_jsx(\"path\",{style:{webkitFilter:\"drop-shadow( 0px 0px 10px rgba(100, 149, 237, 0.8))\"},d:\"M \".concat(points[0].x,\" \").concat(points[0].y,\" C \").concat(points[0].x,\" \").concat(points[0].y-(points[0].y-points[1].y)/2,\", \").concat(points[1].x,\" \").concat(points[1].y+(points[0].y-points[1].y)/2,\", \").concat(points[1].x,\" \").concat(points[1].y),fill:\"transparent\",stroke:\"cornflowerblue\",strokeWidth:\"4\"// onMouseDown={() => handleRemovePatchCable(id)}\n}),/*#__PURE__*/_jsx(\"path\",{className:\"hover:cursor-pointer\",d:\"M \".concat(points[0].x,\" \").concat(points[0].y,\" C \").concat(points[0].x,\" \").concat(points[0].y-(points[0].y-points[1].y)/2,\", \").concat(points[1].x,\" \").concat(points[1].y+(points[0].y-points[1].y)/2,\", \").concat(points[1].x,\" \").concat(points[1].y),fill:\"transparent\"// stroke=\"black\"\n,stroke:\"transparent\",strokeWidth:\"16\",onMouseDown:()=>{handleRemovePatchCable(id,outId,inId);}}),points.map((point,i)=>/*#__PURE__*/_jsx(\"circle\",{className:\"pointer-events-none\",cx:point.x,cy:point.y,r:\"4\",fill:\"cornflowerblue\",onMouseDown:e=>startDrag(e,i)},i))]});};export default PatchCable;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}