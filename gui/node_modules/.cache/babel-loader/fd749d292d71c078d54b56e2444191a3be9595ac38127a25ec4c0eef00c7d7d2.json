{"ast":null,"code":"var _jsxFileName = \"/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay/patchCable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatchCable = ({\n  i\n}) => {\n  _s();\n  const [hover, setHover] = useState(false);\n  const cableRef = useRef(null);\n\n  //   const changeColor = (newColor) => setColor(newColor);\n\n  const [points, setPoints] = useState([{\n    x: 30,\n    y: 30\n  }, {\n    x: 30,\n    y: 130\n  }, {\n    x: 600,\n    y: 130\n  }, {\n    x: 600,\n    y: 230\n  }]);\n  const startDrag = (event, index) => {\n    event.preventDefault();\n    const mousemove = event => {\n      event.preventDefault();\n      let cursorPoint = svgRef.current.createSVGPoint();\n      cursorPoint.x = event.clientX;\n      cursorPoint.y = event.clientY;\n      cursorPoint = cursorPoint.matrixTransform(svgRef.current.getScreenCTM().inverse());\n      setPoints(points.map((p, i) => index === i ? {\n        x: Math.max(Math.min(cursorPoint.x, 1000), 0),\n        y: Math.max(Math.min(cursorPoint.y, 1000), 0)\n      } : p));\n    };\n    const mouseup = event => {\n      document.removeEventListener(\"mousemove\", mousemove);\n      document.removeEventListener(\"mouseup\", mouseup);\n    };\n    document.addEventListener(\"mousemove\", mousemove);\n    document.addEventListener(\"mouseup\", mouseup);\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: `M ${points[0].x} ${points[0].y} C ${points[0].x} ${points[0].y + 100}, ${points[2].x} ${points[2].y}, ${points[3].x} ${points[3].y}`,\n      fill: \"transparent\",\n      stroke: \"cornflowerblue\",\n      strokeWidth: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), points.map((point, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: \"translate(-15, -15)\",\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: point.x,\n        y: point.y,\n        width: \"30\",\n        height: \"30\",\n        onMouseDown: e => startDrag(e, i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PatchCable, \"+dZrhRoPnURvveETm5w/uZx6dhQ=\");\n_c = PatchCable;\nexport default PatchCable;\nvar _c;\n$RefreshReg$(_c, \"PatchCable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PatchCable","i","_s","hover","setHover","cableRef","useRef","points","setPoints","x","y","startDrag","event","index","preventDefault","mousemove","cursorPoint","svgRef","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","map","p","Math","max","min","mouseup","document","removeEventListener","addEventListener","children","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","point","transform","width","height","onMouseDown","e","_c","$RefreshReg$"],"sources":["/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay/patchCable.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PatchCable = ({ i }) => {\n  const [hover, setHover] = useState(false);\n\n  const cableRef = useRef(null);\n\n  //   const changeColor = (newColor) => setColor(newColor);\n\n  const [points, setPoints] = useState([\n    { x: 30, y: 30 },\n    { x: 30, y: 130 },\n    { x: 600, y: 130 },\n    { x: 600, y: 230 },\n  ]);\n\n  const startDrag = (event, index) => {\n    event.preventDefault();\n\n    const mousemove = (event) => {\n      event.preventDefault();\n      let cursorPoint = svgRef.current.createSVGPoint();\n      cursorPoint.x = event.clientX;\n      cursorPoint.y = event.clientY;\n      cursorPoint = cursorPoint.matrixTransform(\n        svgRef.current.getScreenCTM().inverse()\n      );\n      setPoints(\n        points.map((p, i) =>\n          index === i\n            ? {\n                x: Math.max(Math.min(cursorPoint.x, 1000), 0),\n                y: Math.max(Math.min(cursorPoint.y, 1000), 0),\n              }\n            : p\n        )\n      );\n    };\n\n    const mouseup = (event) => {\n      document.removeEventListener(\"mousemove\", mousemove);\n      document.removeEventListener(\"mouseup\", mouseup);\n    };\n\n    document.addEventListener(\"mousemove\", mousemove);\n    document.addEventListener(\"mouseup\", mouseup);\n  };\n\n  return (\n    <svg>\n      <path\n        d={`M ${points[0].x} ${points[0].y} C ${points[0].x} ${\n          points[0].y + 100\n        }, ${points[2].x} ${points[2].y}, ${points[3].x} ${points[3].y}`}\n        fill=\"transparent\"\n        stroke=\"cornflowerblue\"\n        strokeWidth=\"6\"\n      />\n      {points.map((point, i) => (\n        <g transform=\"translate(-15, -15)\">\n          <rect\n            x={point.x}\n            y={point.y}\n            key={i}\n            width=\"30\"\n            height=\"30\"\n            onMouseDown={(e) => startDrag(e, i)}\n          />\n        </g>\n      ))}\n    </svg>\n  );\n};\n\nexport default PatchCable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}