{"ast":null,"code":"var _jsxFileName = \"/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patchbay = () => {\n  _s();\n  const svg = useRef(null);\n  const points = [{\n    x: 30,\n    y: 200\n  }, {\n    x: 30,\n    y: 30\n  }, {\n    x: 600,\n    y: 30\n  }, {\n    x: 600,\n    y: 200\n  }];\n  startDrag = (event, index) => {\n    event.preventDefault();\n    const mousemove = event => {\n      event.preventDefault();\n      let cursorPoint = this.svg.createSVGPoint();\n      cursorPoint.x = event.clientX;\n      cursorPoint.y = event.clientY;\n      cursorPoint = cursorPoint.matrixTransform(this.svg.getScreenCTM().inverse());\n      this.setState({\n        points: this.state.points.map((p, i) => index === i ? {\n          x: Math.max(Math.min(cursorPoint.x, 1000), 0),\n          y: Math.max(Math.min(cursorPoint.y, 1000), 0)\n        } : p)\n      });\n    };\n    const mouseup = event => {\n      document.removeEventListener(\"mousemove\", mousemove);\n      document.removeEventListener(\"mouseup\", mouseup);\n    };\n    document.addEventListener(\"mousemove\", mousemove);\n    document.addEventListener(\"mouseup\", mouseup);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full bg-green-500\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 1000 1000\",\n      ref: svg,\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M ${points[0].x} ${points[0].y} C ${points[1].x} ${points[1].y}, ${points[2].x} ${points[2].y}, ${points[3].x} ${points[3].y}`,\n        fill: \"transparent\",\n        stroke: \"blue\",\n        strokeWidth: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M ${points[0].x} ${points[0].y} L ${points[1].x} ${points[1].y} M ${points[2].x} ${points[2].y} L ${points[3].x} ${points[3].y}`,\n        fill: \"transparent\",\n        stroke: \"gray\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), points.map((point, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(-15, -15)\",\n        children: /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: point.x,\n          y: point.y,\n          width: \"30\",\n          height: \"30\",\n          onMouseDown: e => this.startDrag(e, i)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Patchbay, \"zqrBtUzkXbC+niiR8G0dQib6Bes=\");\n_c = Patchbay;\nexport default Patchbay;\nvar _c;\n$RefreshReg$(_c, \"Patchbay\");","map":{"version":3,"names":["useEffect","useState","useRef","jsxDEV","_jsxDEV","Patchbay","_s","svg","points","x","y","startDrag","event","index","preventDefault","mousemove","cursorPoint","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","setState","state","map","p","i","Math","max","min","mouseup","document","removeEventListener","addEventListener","className","children","viewBox","ref","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","point","transform","width","height","onMouseDown","e","_c","$RefreshReg$"],"sources":["/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\n\nconst Patchbay = () => {\n  const svg = useRef(null);\n\n  const points = [\n    { x: 30, y: 200 },\n    { x: 30, y: 30 },\n    { x: 600, y: 30 },\n    { x: 600, y: 200 },\n  ];\n\n  startDrag = (event, index) => {\n    event.preventDefault();\n\n    const mousemove = (event) => {\n      event.preventDefault();\n      let cursorPoint = this.svg.createSVGPoint();\n      cursorPoint.x = event.clientX;\n      cursorPoint.y = event.clientY;\n      cursorPoint = cursorPoint.matrixTransform(\n        this.svg.getScreenCTM().inverse()\n      );\n      this.setState({\n        points: this.state.points.map((p, i) =>\n          index === i\n            ? {\n                x: Math.max(Math.min(cursorPoint.x, 1000), 0),\n                y: Math.max(Math.min(cursorPoint.y, 1000), 0),\n              }\n            : p\n        ),\n      });\n    };\n\n    const mouseup = (event) => {\n      document.removeEventListener(\"mousemove\", mousemove);\n      document.removeEventListener(\"mouseup\", mouseup);\n    };\n\n    document.addEventListener(\"mousemove\", mousemove);\n    document.addEventListener(\"mouseup\", mouseup);\n  };\n\n  return (\n    <div className=\"h-full w-full bg-green-500\">\n      <svg viewBox=\"0 0 1000 1000\" ref={svg}>\n        <path\n          d={`M ${points[0].x} ${points[0].y} C ${points[1].x} ${points[1].y}, ${points[2].x} ${points[2].y}, ${points[3].x} ${points[3].y}`}\n          fill=\"transparent\"\n          stroke=\"blue\"\n          strokeWidth=\"10\"\n        />\n        <path\n          d={`M ${points[0].x} ${points[0].y} L ${points[1].x} ${points[1].y} M ${points[2].x} ${points[2].y} L ${points[3].x} ${points[3].y}`}\n          fill=\"transparent\"\n          stroke=\"gray\"\n          strokeWidth=\"2\"\n        />\n        {points.map((point, i) => (\n          <g transform=\"translate(-15, -15)\">\n            <rect\n              x={point.x}\n              y={point.y}\n              key={i}\n              width=\"30\"\n              height=\"30\"\n              onMouseDown={(e) => this.startDrag(e, i)}\n            />\n          </g>\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nexport default Patchbay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}