{"ast":null,"code":"import React,{useRef,useEffect}from\"react\";// import * as s from \"./osc.module.css\"\n// import * as Tone from 'tone'\n// import Dial from \"./dial\"\n// import { useStore } from \"../utils/store\"\n// import * as StartAudioContext from '../utils/StartAudioContext'\nimport{jsx as _jsx}from\"react/jsx-runtime\";function Slider(_ref){let{Id}=_ref;// let def_vol = -60\n// const { osc, setFreq, setAmp } = useStore()\n// const oscVals = useRef(useStore.getState().osc)\n// useEffect(() => useStore.subscribe(\n//     (osc) => (oscVals.current = osc),\n//     state => state.osc,\n// ), [])\n// const ampRef = useRef(null);\n// const freqRef = useRef(null);\n// useEffect(() => (\n//     ampRef.current = new Tone.Volume(osc[Id].amp).connect(dest),\n//     freqRef.current = new Tone.Oscillator(osc[Id].freq,\"sine\").connect(ampRef.current)\n// ), [])\n// const setF = (f) => {\n//     setFreq(Id,f)\n//     freqRef.current.frequency.value = f;\n// }\n// const setV = (v) => {\n//     setAmp(Id,v)\n//     // console.log(-10 + v/1)\n//     ampRef.current.volume.value = -30 + v/1;\n// }\n// console.log(Id);\n// StartAudioContext(Tone.context, 's.osc').then(function(){\n//     //started\n// })\nreturn/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"slider\",id:\"v\"+Id,min:\"-60.0\",max:\"0.0\",step:\"0.01\",defaultValue:\"0.0\",onChange:event=>{console.log(Id,event.target.value);// setV(event.target.value);\n// if(event.target.value<-59){\n//     freqRef.current.stop();\n// }\n// else if(freqRef.current.state === 'stopped'){\n//     freqRef.current.start();\n// }\n}});}export default Slider;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}