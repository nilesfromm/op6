{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Clone } from './Clone.js';\nimport { GLTFLoader, DRACOLoader, MeshoptDecoder } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\nlet dracoLoader = null;\nlet decoderPath = 'https://www.gstatic.com/draco/versioned/decoders/1.5.5/';\nfunction extensions(useDraco, useMeshopt, extendLoader) {\n  return loader => {\n    if (extendLoader) {\n      extendLoader(loader);\n    }\n    if (useDraco) {\n      if (!dracoLoader) {\n        dracoLoader = new DRACOLoader();\n      }\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : decoderPath);\n      loader.setDRACOLoader(dracoLoader);\n    }\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder);\n    }\n  };\n}\nfunction useGLTF(path) {\n  let useDraco = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let useMeshOpt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let extendLoader = arguments.length > 3 ? arguments[3] : undefined;\n  return useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n}\nuseGLTF.preload = function (path) {\n  let useDraco = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let useMeshOpt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let extendLoader = arguments.length > 3 ? arguments[3] : undefined;\n  return useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n};\nuseGLTF.clear = input => useLoader.clear(GLTFLoader, input);\nuseGLTF.setDecoderPath = path => {\n  decoderPath = path;\n};\n\n//\n\nconst Gltf = /* @__PURE__ */React.forwardRef((_ref, ref) => {\n  let {\n    src,\n    useDraco,\n    useMeshOpt,\n    extendLoader,\n    ...props\n  } = _ref;\n  const {\n    scene\n  } = useGLTF(src, useDraco, useMeshOpt, extendLoader);\n  return /*#__PURE__*/React.createElement(Clone, _extends({\n    ref: ref\n  }, props, {\n    object: scene\n  }));\n});\nexport { Gltf, useGLTF };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}