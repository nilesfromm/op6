{"ast":null,"code":"import{useEffect,useState,useRef}from\"react\";import{SpectrumAnalyzer}from\"./SpectrumAnalyzer\";import Slider from\"./components/slider\";import\"./index.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const SAMPLE_RATE=44100;const FREQUENCY_INTERVALS=[0,29,60,115,218,411,777,1500,2800,5200,11000];const FILTER_FREQS=FREQUENCY_INTERVALS.slice(2,10);const UI=_ref=>{let{amps,pans,handleSliderChange,handleSliderChangeTest}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"ui\",children:amps.map((amp,i)=>/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:\"cornflowerblue\",height:\"100%\",width:\"100px\",display:\"flex\"},children:/*#__PURE__*/_jsx(Slider,{Id:i,handleChange:handleSliderChangeTest})},i))});};export default function View(_ref2){let{patchConnection}=_ref2;const[stateLoaded,setStateLoaded]=useState(false);const[fftData,setFFTData]=useState([]);const[amps,setAmps]=useState(Array(8).fill(0.0));const[pans,setPans]=useState(Array(8).fill(0.0));const updateValues=(type,index,value)=>{if(type===\"amp\"){setAmps(prev=>prev.map((amp,i)=>i===index?value:amp));}else if(type===\"pan\"){setPans(prev=>prev.map((pan,i)=>i===index?value:pan));}};const handleSliderChange=(type,index,value)=>{updateValues(type,index,value);patchConnection===null||patchConnection===void 0?void 0:patchConnection.sendEventOrValue(\"\".concat(type,\"Band\").concat(index),value,100);};const handleSliderChangeTest=(type,index,value)=>{setAmps(prev=>prev.map((amp,i)=>i===index?value:amp));patchConnection===null||patchConnection===void 0?void 0:patchConnection.sendEventOrValue(\"osc\".concat(index,\"_amp\"),value*1000,10);// console.log(type, index, value);\n};const handleDftOut=event=>{setFFTData(event.magnitudes);};useEffect(()=>{const requestParameterValues=type=>{for(let i=0;i<FILTER_FREQS.length;i++){patchConnection===null||patchConnection===void 0?void 0:patchConnection.requestParameterValue(\"\".concat(type,\"Band\").concat(i));}};const handleControlChange=event=>{const id=event.endpointID;const val=event.value;const index=parseInt(id.slice(-1));const type=id.slice(0,3);updateValues(type,index,val);};// Add listeners for DFT output and input controls\npatchConnection===null||patchConnection===void 0?void 0:patchConnection.addEndpointListener(\"dftOut\",handleDftOut);patchConnection===null||patchConnection===void 0?void 0:patchConnection.addAllParameterListener(handleControlChange);// Load initial state\nif(!stateLoaded){requestParameterValues(\"amp\");requestParameterValues(\"pan\");setStateLoaded(true);}return()=>{patchConnection===null||patchConnection===void 0?void 0:patchConnection.removeEndpointListener(\"dftOut\",handleDftOut);patchConnection===null||patchConnection===void 0?void 0:patchConnection.removeAllParameterListener(handleControlChange);};},[patchConnection,stateLoaded]);return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"stack\",children:/*#__PURE__*/_jsx(UI,{amps:amps,pans:pans,handleSliderChange:handleSliderChange,handleSliderChangeTest:handleSliderChangeTest})})});}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}