{"ast":null,"code":"var _jsxFileName = \"/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patchbay = () => {\n  const points = [{\n    x: 30,\n    y: 200\n  }, {\n    x: 30,\n    y: 30\n  }, {\n    x: 600,\n    y: 30\n  }, {\n    x: 600,\n    y: 200\n  }];\n\n  //   startDrag = (event, index) => {\n  //     event.preventDefault();\n\n  //     const mousemove = (event) => {\n  //       event.preventDefault();\n  //       let cursorPoint = this.svg.createSVGPoint();\n  //       cursorPoint.x = event.clientX;\n  //       cursorPoint.y = event.clientY;\n  //       cursorPoint = cursorPoint.matrixTransform(this.svg.getScreenCTM().inverse());\n  //       this.setState({\n  //         points: this.state.points.map(\n  //           (p, i) => (index === i ? {\n  //             x: Math.max(Math.min(cursorPoint.x, 1000), 0),\n  //             y: Math.max(Math.min(cursorPoint.y, 1000), 0)\n  //           } : p))\n  //       })\n  //     };\n\n  //     const mouseup = (event) => {\n  //       document.removeEventListener(\"mousemove\", mousemove);\n  //       document.removeEventListener(\"mouseup\", mouseup);\n  //     };\n\n  //     document.addEventListener(\"mousemove\", mousemove);\n  //     document.addEventListener(\"mouseup\", mouseup);\n  //   };\n\n  //   const points = this.state.points;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full bg-green-500\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 1000 1000\",\n      ref: svg => this.svg = svg,\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M ${points[0].x} ${points[0].y} C ${points[1].x} ${points[1].y}, ${points[2].x} ${points[2].y}, ${points[3].x} ${points[3].y}`,\n        fill: \"transparent\",\n        stroke: \"blue\",\n        strokeWidth: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M ${points[0].x} ${points[0].y} L ${points[1].x} ${points[1].y} M ${points[2].x} ${points[2].y} L ${points[3].x} ${points[3].y}`,\n        fill: \"transparent\",\n        stroke: \"gray\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), points.map((point, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(-15, -15)\",\n        children: /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: point.x,\n          y: point.y,\n          width: \"30\",\n          height: \"30\",\n          onMouseDown: e => this.startDrag(e, i)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = Patchbay;\nexport default Patchbay;\nvar _c;\n$RefreshReg$(_c, \"Patchbay\");","map":{"version":3,"names":["Patchbay","points","x","y","_jsxDEV","className","children","viewBox","ref","svg","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","map","point","i","transform","width","height","onMouseDown","e","startDrag","_c","$RefreshReg$"],"sources":["/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay.jsx"],"sourcesContent":["const Patchbay = () => {\n  const points = [\n    { x: 30, y: 200 },\n    { x: 30, y: 30 },\n    { x: 600, y: 30 },\n    { x: 600, y: 200 },\n  ];\n\n  //   startDrag = (event, index) => {\n  //     event.preventDefault();\n\n  //     const mousemove = (event) => {\n  //       event.preventDefault();\n  //       let cursorPoint = this.svg.createSVGPoint();\n  //       cursorPoint.x = event.clientX;\n  //       cursorPoint.y = event.clientY;\n  //       cursorPoint = cursorPoint.matrixTransform(this.svg.getScreenCTM().inverse());\n  //       this.setState({\n  //         points: this.state.points.map(\n  //           (p, i) => (index === i ? {\n  //             x: Math.max(Math.min(cursorPoint.x, 1000), 0),\n  //             y: Math.max(Math.min(cursorPoint.y, 1000), 0)\n  //           } : p))\n  //       })\n  //     };\n\n  //     const mouseup = (event) => {\n  //       document.removeEventListener(\"mousemove\", mousemove);\n  //       document.removeEventListener(\"mouseup\", mouseup);\n  //     };\n\n  //     document.addEventListener(\"mousemove\", mousemove);\n  //     document.addEventListener(\"mouseup\", mouseup);\n  //   };\n\n  //   const points = this.state.points;\n  return (\n    <div className=\"h-full w-full bg-green-500\">\n      <svg viewBox=\"0 0 1000 1000\" ref={(svg) => (this.svg = svg)}>\n        <path\n          d={`M ${points[0].x} ${points[0].y} C ${points[1].x} ${points[1].y}, ${points[2].x} ${points[2].y}, ${points[3].x} ${points[3].y}`}\n          fill=\"transparent\"\n          stroke=\"blue\"\n          strokeWidth=\"10\"\n        />\n        <path\n          d={`M ${points[0].x} ${points[0].y} L ${points[1].x} ${points[1].y} M ${points[2].x} ${points[2].y} L ${points[3].x} ${points[3].y}`}\n          fill=\"transparent\"\n          stroke=\"gray\"\n          strokeWidth=\"2\"\n        />\n        {points.map((point, i) => (\n          <g transform=\"translate(-15, -15)\">\n            <rect\n              x={point.x}\n              y={point.y}\n              key={i}\n              width=\"30\"\n              height=\"30\"\n              onMouseDown={(e) => this.startDrag(e, i)}\n            />\n          </g>\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nexport default Patchbay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}