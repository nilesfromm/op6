{"ast":null,"code":"var _jsxFileName = \"/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay/patchbay.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport OutputNode from \"./outputNode\";\nimport InputNode from \"./inputNode\";\nimport PatchCable from \"./patchCable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patchbay = () => {\n  _s();\n  const svgRef = useRef(null);\n  const [patchCables, setPatchCables] = useState([]);\n  const outs = 8;\n  const ins = 8;\n  const createPatchCable = startPt => {\n    console.log(\"creating patch cable (id: at: \");\n    console.log(startPt);\n    setPatchCables(prevCables => [...prevCables, {\n      startPt\n    }]);\n    console.log(patchCables);\n  };\n  const removePatchCable = id => {\n    console.log(\"removing patch cable with id: \" + id);\n    // setPatchCables((prevCables) => prevCables.filter((cable, i) => i !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[300px] w-[700px] bg-slate-300\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 700 300\",\n      children: [[...Array(ins)].map((node, i) => /*#__PURE__*/_jsxDEV(InputNode, {\n        i: i\n      }, `input-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)), [...Array(outs)].map((node, i) => /*#__PURE__*/_jsxDEV(OutputNode, {\n        i: i,\n        createPatchCable: createPatchCable\n      }, `output-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)), patchCables.map((cable, i) => /*#__PURE__*/_jsxDEV(PatchCable, {\n        id: i,\n        startPt: cable.startPt,\n        removePatchCable: removePatchCable\n      }, `cable-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Patchbay, \"vBL++PJ8zChTDneHQLQ35Q6RsII=\");\n_c = Patchbay;\nexport default Patchbay;\nvar _c;\n$RefreshReg$(_c, \"Patchbay\");","map":{"version":3,"names":["useEffect","useState","useRef","OutputNode","InputNode","PatchCable","jsxDEV","_jsxDEV","Patchbay","_s","svgRef","patchCables","setPatchCables","outs","ins","createPatchCable","startPt","console","log","prevCables","removePatchCable","id","className","children","viewBox","Array","map","node","i","fileName","_jsxFileName","lineNumber","columnNumber","cable","_c","$RefreshReg$"],"sources":["/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay/patchbay.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport OutputNode from \"./outputNode\";\nimport InputNode from \"./inputNode\";\nimport PatchCable from \"./patchCable\";\n\nconst Patchbay = () => {\n  const svgRef = useRef(null);\n\n  const [patchCables, setPatchCables] = useState([]);\n\n  const outs = 8;\n  const ins = 8;\n\n  const createPatchCable = (startPt) => {\n    console.log(\"creating patch cable (id: at: \");\n    console.log(startPt);\n    setPatchCables((prevCables) => [...prevCables, { startPt }]);\n    console.log(patchCables);\n  };\n\n  const removePatchCable = (id) => {\n    console.log(\"removing patch cable with id: \" + id);\n    // setPatchCables((prevCables) => prevCables.filter((cable, i) => i !== id));\n  };\n\n  return (\n    <div className=\"h-[300px] w-[700px] bg-slate-300\">\n      <svg viewBox=\"0 0 700 300\">\n        {[...Array(ins)].map((node, i) => (\n          <InputNode key={`input-${i}`} i={i} />\n        ))}\n        {[...Array(outs)].map((node, i) => (\n          <OutputNode\n            key={`output-${i}`}\n            i={i}\n            createPatchCable={createPatchCable}\n          />\n        ))}\n        {patchCables.map((cable, i) => (\n          <PatchCable\n            key={`cable-${i}`}\n            id={i}\n            startPt={cable.startPt}\n            removePatchCable={removePatchCable}\n          />\n        ))}\n        {/* <PatchCable key={`cable-${index}`} startPt={{ x: 77.7, y: 300 }} /> */}\n      </svg>\n    </div>\n  );\n};\n\nexport default Patchbay;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMY,IAAI,GAAG,CAAC;EACd,MAAMC,GAAG,GAAG,CAAC;EAEb,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7CD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpBJ,cAAc,CAAEO,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE;MAAEH;IAAQ,CAAC,CAAC,CAAC;IAC5DC,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMS,gBAAgB,GAAIC,EAAE,IAAK;IAC/BJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,GAAGG,EAAE,CAAC;IAClD;EACF,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,kCAAkC;IAAAC,QAAA,eAC/ChB,OAAA;MAAKiB,OAAO,EAAC,aAAa;MAAAD,QAAA,GACvB,CAAC,GAAGE,KAAK,CAACX,GAAG,CAAC,CAAC,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC3BrB,OAAA,CAACH,SAAS;QAAoBwB,CAAC,EAAEA;MAAE,GAAlB,SAAQA,CAAE,EAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CACtC,CAAC,EACD,CAAC,GAAGP,KAAK,CAACZ,IAAI,CAAC,CAAC,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC5BrB,OAAA,CAACJ,UAAU;QAETyB,CAAC,EAAEA,CAAE;QACLb,gBAAgB,EAAEA;MAAiB,GAF7B,UAASa,CAAE,EAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnB,CACF,CAAC,EACDrB,WAAW,CAACe,GAAG,CAAC,CAACO,KAAK,EAAEL,CAAC,kBACxBrB,OAAA,CAACF,UAAU;QAETgB,EAAE,EAAEO,CAAE;QACNZ,OAAO,EAAEiB,KAAK,CAACjB,OAAQ;QACvBI,gBAAgB,EAAEA;MAAiB,GAH7B,SAAQQ,CAAE,EAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA7CID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}