{"ast":null,"code":"var _jsxFileName = \"/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patchbay = () => {\n  this.state = {\n    points: [{\n      x: 30,\n      y: 200\n    }, {\n      x: 30,\n      y: 30\n    }, {\n      x: 600,\n      y: 30\n    }, {\n      x: 600,\n      y: 200\n    }]\n  };\n  const points = this.state.points;\n  return;\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full bg-green-500\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 1000 1000\",\n      ref: svg => this.svg = svg,\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M ${points[0].x} ${points[0].y} C ${points[1].x} ${points[1].y}, ${points[2].x} ${points[2].y}, ${points[3].x} ${points[3].y}`,\n        fill: \"transparent\",\n        stroke: \"blue\",\n        strokeWidth: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M ${points[0].x} ${points[0].y} L ${points[1].x} ${points[1].y} M ${points[2].x} ${points[2].y} L ${points[3].x} ${points[3].y}`,\n        fill: \"transparent\",\n        stroke: \"gray\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), points.map((point, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(-15, -15)\",\n        children: /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: point.x,\n          y: point.y,\n          width: \"30\",\n          height: \"30\",\n          onMouseDown: e => this.startDrag(e, i)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n_c = Patchbay;\nexport default Patchbay;\nvar _c;\n$RefreshReg$(_c, \"Patchbay\");","map":{"version":3,"names":["Patchbay","state","points","x","y","_jsxDEV","className","children","viewBox","ref","svg","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","map","point","i","transform","width","height","onMouseDown","e","startDrag","_c","$RefreshReg$"],"sources":["/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/components/patchbay.jsx"],"sourcesContent":["const Patchbay = () => {\n  this.state = {\n    points: [\n      { x: 30, y: 200 },\n      { x: 30, y: 30 },\n      { x: 600, y: 30 },\n      { x: 600, y: 200 },\n    ],\n  };\n  const points = this.state.points;\n  return;\n  <div className=\"h-full w-full bg-green-500\">\n    <svg viewBox=\"0 0 1000 1000\" ref={(svg) => (this.svg = svg)}>\n      <path\n        d={`M ${points[0].x} ${points[0].y} C ${points[1].x} ${points[1].y}, ${points[2].x} ${points[2].y}, ${points[3].x} ${points[3].y}`}\n        fill=\"transparent\"\n        stroke=\"blue\"\n        strokeWidth=\"10\"\n      />\n      <path\n        d={`M ${points[0].x} ${points[0].y} L ${points[1].x} ${points[1].y} M ${points[2].x} ${points[2].y} L ${points[3].x} ${points[3].y}`}\n        fill=\"transparent\"\n        stroke=\"gray\"\n        strokeWidth=\"2\"\n      />\n      {points.map((point, i) => (\n        <g transform=\"translate(-15, -15)\">\n          <rect\n            x={point.x}\n            y={point.y}\n            key={i}\n            width=\"30\"\n            height=\"30\"\n            onMouseDown={(e) => this.startDrag(e, i)}\n          />\n        </g>\n      ))}\n    </svg>\n  </div>;\n};\n\nexport default Patchbay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}