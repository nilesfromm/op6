{"ast":null,"code":"var _jsxFileName = \"/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/View.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { SpectrumAnalyzer } from \"./SpectrumAnalyzer\";\nimport Slider from \"./components/slider\";\nimport \"./index.css\";\nimport Dial from \"./components/dial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAMPLE_RATE = 44100;\nconst FREQUENCY_INTERVALS = [0, 29, 60, 115, 218, 411, 777, 1500, 2800, 5200, 11000];\nconst FILTER_FREQS = FREQUENCY_INTERVALS.slice(2, 10);\nconst UI = ({\n  amps,\n  pans,\n  handleSliderChange,\n  handleSliderChangeTest\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui\",\n    children: amps.map((amp, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"cornflowerblue\",\n        height: \"100%\",\n        width: \"100px\",\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Slider, {\n        Id: i,\n        handleChange: handleSliderChangeTest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dial, {\n        value: osc[Id].freq,\n        onChange: setF,\n        min: 20,\n        max: 1000\n        // scale={500} \n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = UI;\nexport default function View({\n  patchConnection\n}) {\n  _s();\n  const [stateLoaded, setStateLoaded] = useState(false);\n  const [fftData, setFFTData] = useState([]);\n  const [amps, setAmps] = useState(Array(8).fill(0.0));\n  const [pans, setPans] = useState(Array(8).fill(0.0));\n  const updateValues = (type, index, value) => {\n    if (type === \"amp\") {\n      setAmps(prev => prev.map((amp, i) => i === index ? value : amp));\n    } else if (type === \"pan\") {\n      setPans(prev => prev.map((pan, i) => i === index ? value : pan));\n    }\n  };\n  const handleSliderChange = (type, index, value) => {\n    updateValues(type, index, value);\n    patchConnection === null || patchConnection === void 0 ? void 0 : patchConnection.sendEventOrValue(`${type}Band${index}`, value, 100);\n  };\n  const handleSliderChangeTest = (type, index, value) => {\n    setAmps(prev => prev.map((amp, i) => i === index ? value : amp));\n    patchConnection === null || patchConnection === void 0 ? void 0 : patchConnection.sendEventOrValue(`osc${index}_amp`, value * 1, 10);\n    // console.log(type, index, value);\n  };\n  const handleDftOut = event => {\n    setFFTData(event.magnitudes);\n  };\n  useEffect(() => {\n    const requestParameterValues = type => {\n      for (let i = 0; i < FILTER_FREQS.length; i++) {\n        patchConnection === null || patchConnection === void 0 ? void 0 : patchConnection.requestParameterValue(`${type}Band${i}`);\n      }\n    };\n    const handleControlChange = event => {\n      const id = event.endpointID;\n      const val = event.value;\n      const index = parseInt(id.slice(-1));\n      const type = id.slice(0, 3);\n      updateValues(type, index, val);\n    };\n\n    // Add listeners for DFT output and input controls\n    patchConnection === null || patchConnection === void 0 ? void 0 : patchConnection.addEndpointListener(\"dftOut\", handleDftOut);\n    patchConnection === null || patchConnection === void 0 ? void 0 : patchConnection.addAllParameterListener(handleControlChange);\n\n    // Load initial state\n    if (!stateLoaded) {\n      requestParameterValues(\"amp\");\n      requestParameterValues(\"pan\");\n      setStateLoaded(true);\n    }\n    return () => {\n      patchConnection === null || patchConnection === void 0 ? void 0 : patchConnection.removeEndpointListener(\"dftOut\", handleDftOut);\n      patchConnection === null || patchConnection === void 0 ? void 0 : patchConnection.removeAllParameterListener(handleControlChange);\n    };\n  }, [patchConnection, stateLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stack\",\n      children: /*#__PURE__*/_jsxDEV(UI, {\n        amps: amps,\n        pans: pans,\n        handleSliderChange: handleSliderChange,\n        handleSliderChangeTest: handleSliderChangeTest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(View, \"SNECNnD8Quw3JWFRaZRAKRtOFqE=\");\n_c2 = View;\nvar _c, _c2;\n$RefreshReg$(_c, \"UI\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["useEffect","useState","useRef","SpectrumAnalyzer","Slider","Dial","jsxDEV","_jsxDEV","SAMPLE_RATE","FREQUENCY_INTERVALS","FILTER_FREQS","slice","UI","amps","pans","handleSliderChange","handleSliderChangeTest","className","children","map","amp","i","style","backgroundColor","height","width","display","Id","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","value","osc","freq","onChange","setF","min","max","_c","View","patchConnection","_s","stateLoaded","setStateLoaded","fftData","setFFTData","setAmps","Array","fill","setPans","updateValues","type","index","prev","pan","sendEventOrValue","handleDftOut","event","magnitudes","requestParameterValues","length","requestParameterValue","handleControlChange","id","endpointID","val","parseInt","addEndpointListener","addAllParameterListener","removeEndpointListener","removeAllParameterListener","_c2","$RefreshReg$"],"sources":["/Users/niles/Desktop/Github/cmaj/firstProj/gui/src/View.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport { SpectrumAnalyzer } from \"./SpectrumAnalyzer\";\nimport Slider from \"./components/slider\";\nimport \"./index.css\";\nimport Dial from \"./components/dial\";\n\nconst SAMPLE_RATE = 44100;\nconst FREQUENCY_INTERVALS = [\n  0, 29, 60, 115, 218, 411, 777, 1500, 2800, 5200, 11000,\n];\nconst FILTER_FREQS = FREQUENCY_INTERVALS.slice(2, 10);\n\nconst UI = ({ amps, pans, handleSliderChange, handleSliderChangeTest }) => {\n  return (\n    <div className=\"ui\">\n      {amps.map((amp, i) => (\n        <div\n          key={i}\n          style={{\n            backgroundColor: \"cornflowerblue\",\n            height: \"100%\",\n            width: \"100px\",\n            display: \"flex\"\n          }}\n        >\n          <Slider Id={i} handleChange={handleSliderChangeTest} />\n          <Dial \n                    value={osc[Id].freq} \n                    onChange={setF}\n                    min={20}\n                    max={1000}\n                    // scale={500} \n                />\n          {/* <input\n            className=\"freq-slider\"\n            type=\"range\"\n            value={amp}\n            min={0.0}\n            max={1.0}\n            step={0.001}\n            onChange={(e) => handleSliderChange(\"amp\", i, e.target.value)}\n            onDoubleClick={() => {\n              handleSliderChange(\"amp\", i, 1.0);\n            }}\n          /> */}\n          {/* <input\n            className=\"pan-slider\"\n            type=\"range\"\n            min={-1.0}\n            max={1.0}\n            step={0.001}\n            value={pans[i]}\n            onChange={(e) => handleSliderChange(\"pan\", i, e.target.value)}\n            onDoubleClick={() => {\n              handleSliderChange(\"pan\", i, 0.0);\n            }}\n          /> */}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default function View({ patchConnection }) {\n  const [stateLoaded, setStateLoaded] = useState(false);\n  const [fftData, setFFTData] = useState([]);\n  const [amps, setAmps] = useState(Array(8).fill(0.0));\n  const [pans, setPans] = useState(Array(8).fill(0.0));\n\n  const updateValues = (type, index, value) => {\n    if (type === \"amp\") {\n      setAmps((prev) => prev.map((amp, i) => (i === index ? value : amp)));\n    } else if (type === \"pan\") {\n      setPans((prev) => prev.map((pan, i) => (i === index ? value : pan)));\n    }\n  };\n\n  const handleSliderChange = (type, index, value) => {\n    updateValues(type, index, value);\n    patchConnection?.sendEventOrValue(`${type}Band${index}`, value, 100);\n  };\n\n  const handleSliderChangeTest = (type, index, value) => {\n    setAmps((prev) => prev.map((amp, i) => (i === index ? value : amp)));\n    patchConnection?.sendEventOrValue(`osc${index}_amp`, value*1, 10);\n    // console.log(type, index, value);\n  }\n\n  const handleDftOut = (event) => {\n    setFFTData(event.magnitudes);\n  };\n\n  useEffect(() => {\n    const requestParameterValues = (type) => {\n      for (let i = 0; i < FILTER_FREQS.length; i++) {\n        patchConnection?.requestParameterValue(`${type}Band${i}`);\n      }\n    };\n\n    const handleControlChange = (event) => {\n      const id = event.endpointID;\n      const val = event.value;\n      const index = parseInt(id.slice(-1));\n      const type = id.slice(0, 3);\n\n      updateValues(type, index, val);\n    };\n\n    // Add listeners for DFT output and input controls\n    patchConnection?.addEndpointListener(\"dftOut\", handleDftOut);\n    patchConnection?.addAllParameterListener(handleControlChange);\n\n    // Load initial state\n    if (!stateLoaded) {\n      requestParameterValues(\"amp\");\n      requestParameterValues(\"pan\");\n\n      setStateLoaded(true);\n    }\n\n    return () => {\n      patchConnection?.removeEndpointListener(\"dftOut\", handleDftOut);\n      patchConnection?.removeAllParameterListener(handleControlChange);\n    };\n  }, [patchConnection, stateLoaded]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"stack\">\n        {/* <SpectrumAnalyzer\n          className=\"analyzer\"\n          fftData={fftData}\n          // TODO: this should be sent from the backend\n          sampleRate={SAMPLE_RATE}\n          frequencyIntervals={FREQUENCY_INTERVALS}\n          filterFreqs={FILTER_FREQS}\n          amps={amps}\n        /> */}\n        <UI amps={amps} pans={pans} handleSliderChange={handleSliderChange} handleSliderChangeTest={handleSliderChangeTest} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}